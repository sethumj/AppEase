@model AppEase.Models.Profile
@using System.Linq

@{
    ViewData["Title"] = "Details";
}

<div>
    <h4>Profile</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LinkedIn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LinkedIn)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Github)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Github)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Resume)
        </dt>
        <dd class = "col-sm-10">
            @{
                var resumeWords = Model.Resume.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
                var firstTenWords = string.Join(" ", resumeWords.Take(10)) ;
            }
            <span class="short-resume">@firstTenWords</span>
            <span class="full-resume" style="display:none;">@Model.Resume View Less</span>

            <a href="javascript:void(0);" class="show-full-resume" onclick="toggleResume(this)">
                <img src="~/images/viewmore.png" alt="Show Full Resume" style="width:25px;height:25px;" />
            </a>
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SkillSet)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SkillSet)
        </dd>
    </dl>
</div>

<div>
    <h4>Jobs</h4>
    <hr /><br />
    @if (Model.Jobs != null && Model.Jobs.Any())
    {
        <div class="job-cards-container">
            <button class="scroll-arrow left" onclick="customscrollLeft()">&#9664;</button>
            <div class="job-cards">
                @foreach (var job in Model.Jobs)
                {
                    <div class="card job-card">
                        <div class="card-body">
                            <h5 class="card-title">@job.Title</h5>
                            <p class="card-text">@job.CompanyName</p>
                            <!-- Display other job details as needed -->
                            <a asp-controller="Jobs" asp-action="Details" asp-route-id="@job.Id" class="btn btn-primary">View Details</a>
                        </div>
                    </div>
                }
            </div>
            <button class="scroll-arrow right" onclick="scrollRight()">&#9654;</button>
        </div>
    }
    else
    {
        <p>No jobs found for this profile.</p>
    }
    <br />
</div>

<div>
    <h4>Add Job</h4>
    <hr />
    <form asp-action="AddJob" method="post">
        <input type="hidden" asp-for="Id" /> <!-- Hidden field to include profile ID in the form -->
        <div class="form-group">
            <label asp-for="NewJob.CompanyName"></label>
            <input asp-for="NewJob.CompanyName" class="form-control" />
            <span asp-validation-for="NewJob.CompanyName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="NewJob.Title"></label>
            <input asp-for="NewJob.Title" class="form-control" />
            <span asp-validation-for="NewJob.Title" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="NewJob.Description" class="control-label"></label>
            <input asp-for="NewJob.Description" class="form-control" />
            <span asp-validation-for="NewJob.Description" class="text-danger"></span>
        </div>
        <br />
        <button type="submit" class="animated-button">Add Job</button>
    </form>
</div>
<div>
    <br /><br />
    <a asp-action="Index" class="btn btn-outline-dark">Back to List</a>
</div>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function toggleResume(element) {
            var shortResume = element.previousElementSibling.previousElementSibling;
            var fullResume = element.previousElementSibling;
            if (fullResume.style.display === "none") {
                fullResume.style.display = "inline";
                shortResume.style.display = "none";
            } else {
                fullResume.style.display = "none";
                shortResume.style.display = "inline";
            }
        }
    </script>

    <script>
        function customscrollLeft() {
            const container = document.querySelector('.job-cards');
            console.log("scroll left");
            container.scrollBy({
                left: -250,  // Adjust the value as needed
                behavior: 'smooth'
            });
        }
    </script>
    <script>
        function scrollRight() {
            const container = document.querySelector('.job-cards');
            console.log("scroll right");
            container.scrollBy({
                left: 250,  // Adjust the value as needed
                behavior: 'smooth'
            });
        }
    </script>
}
